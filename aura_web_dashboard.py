# aura_web_dashboard.py
import streamlit as st
import pandas as pd
import plotly.express as px

st.set_page_config(page_title="Aura Dashboard", layout="wide")
st.title("ðŸŒŒ Aura Ultimate Web Dashboard")

# Load CSVs generated by aura_data_pipeline.py
ai_data = pd.read_csv("ai_predictions.csv")
quantum_data = pd.read_csv("quantum_results.csv")
telecom_data = pd.read_csv("telecom_metrics.csv")

# Filters
selected_items = st.sidebar.multiselect("AI Items", ai_data["Item"].unique(), default=ai_data["Item"].unique())
selected_circuits = st.sidebar.multiselect("Quantum Circuits", quantum_data["Circuit"].unique(), default=quantum_data["Circuit"].unique())
selected_devices = st.sidebar.multiselect("Devices", telecom_data["Device"].unique(), default=telecom_data["Device"].unique())

ai_filtered = ai_data[ai_data["Item"].isin(selected_items)]
quantum_filtered = quantum_data[quantum_data["Circuit"].isin(selected_circuits)]
telecom_filtered = telecom_data[telecom_data["Device"].isin(selected_devices)]

# AI Dashboard
st.subheader("ðŸ¤– AI Predictions")
st.dataframe(ai_filtered)
st.plotly_chart(px.bar(ai_filtered, x="Item", y="Score", color="Prediction", title="AI Prediction Scores"), use_container_width=True)

# Quantum Dashboard
st.subheader("ðŸ§¬ Quantum Simulation Results")
st.dataframe(quantum_filtered)
st.plotly_chart(px.line(quantum_filtered, x="Circuit", y=["Outcome_0","Outcome_1"], title="Quantum Outcomes"), use_container_width=True)

# Telecom Dashboard
st.subheader("ðŸ“¡ Telecom / IoT Metrics")
st.dataframe(telecom_filtered)
st.plotly_chart(px.scatter(telecom_filtered, x="Latency_ms", y="Throughput_Mbps", color="Device", size="Throughput_Mbps", title="Telecom Device Performance"), use_container_width=True)
